<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nightspawn.stackexample</groupId>
	<artifactId>stackexample</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>StackExample</name>
	<packaging>war</packaging>

	<properties>
		<embedded.glassfish.version>4.1</embedded.glassfish.version>
	</properties>


	<dependencies>
		<!-- CORE -->
		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>javax.ejb-api</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!-- SONAR Plugin -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>2.4</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- include swagger doclet generated sources -->
					<webResources>
						<resource>
							<directory>${project.build.directory}/swagger/apidoc</directory>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<!-- embedded glassfish -->
			<plugin>
				<groupId>org.glassfish.embedded</groupId>
				<artifactId>maven-embedded-glassfish-plugin</artifactId>
				<version>4.0</version>
				<configuration>
					<app>target/${project.artifactId}-${project.version}</app>
					<port>8282</port>
					<contextRoot>${project.artifactId}</contextRoot>
				</configuration>
                <executions>
                    <!-- Start embedded GlassFish -->
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>

                    <!-- Run some admin commands -->
                    <execution>
                        <id>admin</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>admin</goal>
                        </goals>
                        <configuration>
                            <commands>
                                <param>list-applications</param>
                            </commands>
                        </configuration>
                    </execution>

                    <!-- Perform normal deployment (first application) using plugin level configurations -->
                    <execution>
                        <id>deploy</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>

                    <!-- Perform normal undeploy (i.e., first app) using plugin level configurations and stop embedded GlassFish -->
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>undeploy</goal>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
				<dependencies>
					<dependency>
						<groupId>org.glassfish.main.common</groupId>
						<artifactId>simple-glassfish-api</artifactId>
						<version>${embedded.glassfish.version}</version>
					</dependency>
					<dependency>
						<groupId>org.glassfish.main.extras</groupId>
						<artifactId>glassfish-embedded-all</artifactId>
						<version>${embedded.glassfish.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- external glassfish -->
			<plugin>
				<groupId>org.glassfish.maven.plugin</groupId>
				<artifactId>maven-glassfish-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<glassfishDirectory>${glassfish.home}</glassfishDirectory>
					<user>${domain.username}</user>
					<adminPassword>${domain.password}</adminPassword>
					<autoCreate>true</autoCreate>
					<debug>true</debug>
					<echo>false</echo>
					<terse>false</terse>
					<domain>
						<name>${project.artifactId}</name>
						<adminPort>4848</adminPort>
						<httpPort>8080</httpPort>
						<httpsPort>8443</httpsPort>
						<iiopPort>3700</iiopPort>
						<jmsPort>7676</jmsPort>
						<reuse>false</reuse>
						<!-- <jvmOptions> -->
						<!-- <option>-Djava.security.auth.login.config=${project.build.testOutputDirectory}/login.conf</option> -->
						<!-- </jvmOptions> -->
						<!-- <properties> -->
						<!-- <property> -->
						<!-- <name>server.log-service.file</name> -->
						<!-- <value>${domain.log.dir}/server.log</value> -->
						<!-- </property> -->
						<!-- </properties> -->
					</domain>
					<components>
						<component>
							<name>${project.artifactId}</name>
							<artifact>${project.build.directory}/${project.build.finalName}.war</artifact>
						</component>
					</components>
				</configuration>
			</plugin>
			<!-- swagger doclet, see https://github.com/Carma-Public/swagger-jaxrs-doclet -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>generate-service-docs</id>
						<phase>generate-resources</phase>
						<configuration>
							<doclet>com.carma.swagger.doclet.ServiceDoclet</doclet>
							<docletArtifact>
								<groupId>com.carma</groupId>
								<artifactId>swagger-doclet</artifactId>
								<version>1.0.3</version>
							</docletArtifact>
							<reportOutputDirectory>${project.build.directory}/swagger/apidoc</reportOutputDirectory>
							<useStandardDocletOptions>false</useStandardDocletOptions>
							<additionalparam>-apiVersion 1 -docBasePath /stackexample/apidocs
								-apiBasePath /stackexample/api</additionalparam>
						</configuration>
						<goals>
							<goal>javadoc</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


	<pluginRepositories>
		<pluginRepository>
			<id>maven.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>https://maven.java.net/content/groups/promoted/</url>
		</pluginRepository>
		<pluginRepository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/glassfish/</url>
		</pluginRepository>
	</pluginRepositories>

	<!-- BEGIN: Specific to mapping unit tests and covered code -->
	<profiles>
		<profile>
			<id>coverage-per-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<!-- Minimal supported version is 2.4 -->
						<version>2.13</version>
						<configuration>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<dependencies>
				<dependency>
					<groupId>org.codehaus.sonar-plugins.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
					<version>1.2</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	<!-- END: Specific to mapping unit tests and covered code -->
</project>
